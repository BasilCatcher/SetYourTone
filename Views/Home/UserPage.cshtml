
@{char[,] dat = (char[,])ViewData["Message"]; }
<br/>
<strong>В реакциях на триггер возможны следующие символы-цвета: 
    R - Red, G - Green, B - Blue, Y - Yellow, 0 - White, 1 - Black, other - Purple</strong>
<br />
<div>
    <table width="100%" cellpadding="5">
        <tr>
            <th width="80%">
                @{
                    int width = 1500;
                    int height = 700;
                }
                <svg height="@height" wight="@width" viewBox="0 0 @width @height" xmlns="http://www.w3.org/2000/svg">
                    @{ Dictionary<string, string> colors = new Dictionary<string, string>(4);
                        colors.Add("Red", "255, 0, 0");
                        colors.Add("Green", "0, 128, 0");
                        colors.Add("Blue", "0, 0, 255");
                        colors.Add("Yellow", "255, 255, 0");
                        colors.Add("White", "255, 255, 255");
                        colors.Add("Black", "0, 0, 0");
                        colors.Add("Purple", "128, 0, 128");

                        int x = 0, y = 0;
                        int deltaX;
                        if (width / dat.GetLength(0) <= height / dat.GetLength(1))
                        {
                            deltaX = width / dat.GetLength(0);
                        }
                        else
                        {
                            deltaX = height / dat.GetLength(1);
                        }

                        int SizeSqXY = deltaX;

                        for (int k = 0; k < dat.GetLength(1); k++)
                        {
                            for (int i = 0; i < dat.GetLength(0); i++)
                            {
                                char item = dat[i, k];
                                switch (item)
                                {
                                    case '1':
                                        <rect x="@x" y="@y" width="@SizeSqXY" height="@SizeSqXY" fill="rgb(@colors["Black"])" />
                                        break;
                                    case 'R':
                                        <rect x="@x" y="@y" width="@SizeSqXY" height="@SizeSqXY" fill="rgb(@colors["Red"])" />
                                        break;
                                    case 'G':
                                        <rect x="@x" y="@y" width="@SizeSqXY" height="@SizeSqXY" fill="rgb(@colors["Green"])" />
                                        break;
                                    case 'B':
                                        <rect x="@x" y="@y" width="@SizeSqXY" height="@SizeSqXY" fill="rgb(@colors["Blue"])" />
                                        break;
                                    case 'Y':
                                        <rect x="@x" y="@y" width="@SizeSqXY" height="@SizeSqXY" fill="rgb(@colors["Yellow"])" />
                                        break;
                                    case '0':
                                        <rect x="@x" y="@y" width="@SizeSqXY" height="@SizeSqXY" fill="rgb(@colors["White"])" />
                                        break;
                                    default:
                                        <rect x="@x" y="@y" width="@SizeSqXY" height="@SizeSqXY" fill="rgb(@colors["Purple"])" />
                                        break;

                                }
                                x += deltaX;
                            }
                            x = 0;
                            y += deltaX;
                        }
                    }
                </svg>
            </th>
            <th width="20%">

                <p>Важно соблюдать следующие условия:</p>
                <p>Длина триггеров в строке триггеров должна быть одинаковой и равной заданной выше.</p>
                <p>Триггеры должны быть уникальны и заданы двоичным кодом. Количество элементов в строке с триггерами - чётное.</p>
                <p>В строке кадра х левый меньше х правого, а y верхний меньше y нижнего, оба y >= 0/</p>
                <form method="post" asp-action="UserPage">

                    <label>Символ по умолчанию</label><br />
                    <input type="text" name="userRule.DefaultCellMean" value="@ViewData["userRule.DefaultCellMean"]" /><br />

                    <label>Левая граница</label><br />
                    <input type="text" name="userRule.leftBorder" value="@ViewData["userRule.LeftBorder"]" /><br />

                    <label>Правая граница</label><br />
                    <input type="text" name="userRule.rightBorder" value="@ViewData["userRule.RightBorder"]" /><br /><br />

                    <label>Отступ по x от клетки до начала триггера</label><br />
                    <input type="text" name="userRule.Offset" value="@ViewData["userRule.Offset"]" /><br />

                    <label>Длина триггера от отступа</label><br />
                    <input type="text" name="userRule.Length" value="@ViewData["userRule.Length"]" /><br /><br />

                    <label>Строка триггеров </label><br />
                    <label>триггер 1; реакция 1; ... триггер n; реакция n </label><br /><br />
                    <input type="text" name="RowsState.Triggers" value="@ViewData["RowsState.Triggers"]" /><br />

                    <label>Верхняя строка для старта</label><br />
                    <input type="text" name="userRule.startLayerWorkPiece" value="@ViewData["userRule.StartLayerWorkPiece"]" /><br />

                    <label>Строка кадра</label><br />
                    <label>x левый; y верхний; х правый; y нижний</label><br />
                    <input type="text" name="RowsState.Frame" value="@ViewData["RowsState.Frame"]" /><br />

                    <input type="submit" value="Отправить" />
                </form>
            </th>
        </tr>
    </table>
    
</div>