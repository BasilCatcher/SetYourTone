
@{
    char[,] dat = (char[,])ViewData["Frame"];
    Dictionary<string, char> Triggers = (Dictionary<string, char>)ViewData["TriggersDictionary"];
    Dictionary<char, string> colors = (Dictionary<char, string>)ViewData["ColorsDictionary"];
 }

<div>
    <table width="100%" cellpadding="5">
        <tr>
            <th width="80%">
                @{
                    int width = 1500;
                    int height = 700;
                }
                <svg height="@height" wight="@width" viewBox="0 0 @width @height" xmlns="http://www.w3.org/2000/svg">
                    @{
                        int x = 0, y = 0;
                        int deltaX;
                        if (width / dat.GetLength(1) <= height / dat.GetLength(0))
                        {
                            deltaX = width / dat.GetLength(1);
                        }
                        else
                        {
                            deltaX = height / dat.GetLength(0);
                        }

                        int SizeSqXY = deltaX;

                        for (int k = 0; k < dat.GetLength(0); k++)
                        {
                            for (int i = 0; i < dat.GetLength(1); i++)
                            {
                                char item = dat[k, i];
                                <rect x="@x" y="@y" width="@SizeSqXY" height="@SizeSqXY" fill="rgb(@colors[item])" />

                                x += deltaX;
                            }
                            x = 0;
                            y += deltaX;
                        }
                    }
                </svg>
            </th>
            <th width="20%">

                <p>Важно соблюдать следующие условия:</p>
                <p>Длина триггеров в строке триггеров должна быть одинаковой и равной заданной выше.</p>
                <p>Триггеры должны быть уникальны и заданы двоичным кодом. Количество элементов в строке с триггерами - чётное.</p>
                <p>В строке кадра х левый меньше х правого, а y верхний меньше y нижнего, оба y >= 0</p>
                <form method="post" asp-action="UserPage">

                    <label>Символ по умолчанию</label><br />
                    <input type="text" name="userRule.DefaultCellMean" value="@ViewData["userRule.DefaultCellMean"]" /><br />

                    <label>Левая граница</label><br />
                    <input type="text" name="userRule.leftBorder" value="@ViewData["userRule.LeftBorder"]" /><br />

                    <label>Правая граница</label><br />
                    <input type="text" name="userRule.rightBorder" value="@ViewData["userRule.RightBorder"]" /><br /><br />

                    <label>Отступ по x от клетки до начала триггера</label><br />
                    <input type="text" name="userRule.Offset" value="@ViewData["userRule.Offset"]" /><br />

                    <label>Длина триггера от отступа</label><br />
                    <input type="text" name="userRule.Length" value="@ViewData["userRule.Length"]" /><br /><br />

                    <label>Верхняя строка для старта</label><br />
                    <input type="text" name="userRule.startLayerWorkPiece" value="@ViewData["userRule.StartLayerWorkPiece"]" /><br />

                    <label>Строка кадра</label><br />
                    <label>x левый; y верхний; х правый; y нижний</label><br />
                    <input type="text" name="RowsState.Frame" value="@ViewData["RowsState.Frame"]" /><br />

                    <input type="hidden" name="RowsState.Triggers" value="@ViewData["RowsState.Triggers"]" /><br />
                    <label>Добавление триггеров</label><br />
                    <input type="text" name="CurrentEdit.TriggerToAdd" size="5" />
                    <input type="text" name="CurrentEdit.ReactionToAdd" size="1" /><br />
                    <label>Удаление выбранных триггеров</label><br />
                    <select name="CurrentEdit.TriggersKeysToDelete" size="3" multiple>
                        @{ foreach (string item in Triggers.Keys)
                            {
                                <option value="@item">@item  @Triggers[item]   </option>
                            }
                        }
                    </select>
                    <br />
                    <label>Удаление выбранных цветов</label><br />
                    <select name="CurrentEdit.ColorsKeysToDelete" size="3" multiple>
                        @{ foreach (char key in colors.Keys)
                            {
                                <option value="@key">@key  @colors[key]   </option>
                            }
                        }
                    </select>
                    <br />
                    <label>Добавление цветов</label><br />
                    <input type="text" name="CurrentEdit.ColorsKeyToAdd" size="1" />
                    <input type="text" name="CurrentEdit.ColorsRGBToAdd" size="15" /><br />
                    <input type="hidden" name="RowsState.Colors" size="5" value="@ViewData["RowsState.Colors"]" />
                    @{
                        if (String.Compare((string)ViewData["LimitationMode"],"On")==0)
                        { 
                        <p><input type="checkbox" name="RowsState.Limitation" value="On" checked/> Режим ограниченного пространства</p>
                        }
                        else
                        {
                        <p><input type="checkbox" name="RowsState.Limitation" value="On" /> Режим ограниченного пространства</p>
                        }
                    }
                    <input type="submit" value="Отправить" />
                    <br />

                </form>
            </th>
        </tr>
    </table>
    <br />
    <table width="1000">
        <tr>
            <th width="500">
                <strong>
                    Текущие триггеры <br/>
                    @{
                        foreach (string key in Triggers.Keys)
                        {
                            <label>
                                @key  @Triggers[key]
                            </label><br />
                        }
                    }
                </strong>
            </th>
            <th width="500" align="left">
                <strong>
                    Текущее соответствие символа цвету RGB<br />
                    @{
                        foreach (char key in colors.Keys)
                        {
                            <label >
                                <span style="color:rgb(@colors[key]);">█</span> @key  @colors[key]
                            </label>
                            <br />
                        }
                    }
                </strong>
            </th>
        </tr>
    </table>

</div>